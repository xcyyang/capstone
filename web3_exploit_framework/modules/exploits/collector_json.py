import os
import json
import yaml
from pysondb import db

root_path = os.path.realpath(os.path.dirname(__file__))
cfg_name = "config.yml"
json_name = "exploits.json"

header = ["name", "date", "desc", "proj", "chain", "vuln", "exp"]

# read single project's config file to retrieve the basic information
def read_single_config(proj_path):
    filename = os.path.join(proj_path, cfg_name)
    data = {}
    with open(filename, "r") as stream:
        try:
            content = yaml.safe_load(stream)
            _info = content["info"]
            _tags = _info["tags"]
            data['description'] = _info["description"]
            data['project'] =  _tags["project"]
            data['chains'] = _tags["chains"]
            data['vulnerabilities'] = _tags["vulnerabilities"]
            data['exploits'] = _tags["exploits"]
        except yaml.YAMLError as exc:
            print(exc)
    return data

# get single project's name, date and basic information
def handle_single_exploit(proj_path):
    base_name = os.path.basename(proj_path)
    res = base_name.rsplit("_", 1) # [_name, _date]
    _data = read_single_config(proj_path)
    _data['id'] = base_name
    _data['name'] = res[0]
    _data['date'] = res[1]
    return _data

# batch handle all of exploits
def handle_exploits():
    full_path = os.path.join(root_path)
    file_list = os.listdir(full_path)

    json_data = {
        'data':[]
    }
    for _path in file_list:
        cur_path = os.path.join(full_path, _path)
        if not os.path.isdir(cur_path):
            continue 
        _data = handle_single_exploit(cur_path)
        json_data['data'].append(_data)
    
    return json_data

# write all projects' info to a json file
def write_json(data):
    full_path = os.path.join(root_path, json_name)
    with open(full_path, 'w') as f:
        json.dump(data, f)

# generate the PoCs json file
def generate_json():
    data = handle_exploits()
    write_json(data)

# update the PoCs json file
def update_json():
    pass


if __name__ == "__main__":
    generate_json()
    db = db.getDb(os.path.join(root_path, json_name))
    name = 'flashloan'
    res = db.reSearch("exploits", r'(?i)(^.*)'+name+r'(.*$)')
    for item in res:
        print(item)