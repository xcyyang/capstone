from cmd2 import Cmd
from cmd2.utils import Settable

from web3_exploit_framework.core.setting import (
    save_setting_yaml_file,
    settings,
)
from web3_exploit_framework.core.ui.console.exceptions import (
    Load_Config_Yaml_To_Settable_Error,
    Load_Setting_Yaml_To_Settable_Error,
)


class ConsoleSettingsStore:
    def __init__(self) -> None:
        self.config = {}

    def _onchange_setting_yaml(self, param_name, old, new):
        if "Global_Node_" in param_name:
            settings["node"][param_name.replace("Global_Node_", "")] = new
        elif "Global_Scan_API_" in param_name:
            settings["scan_api"][
                param_name.replace("Global_Scan_API_", "")
            ] = new
        save_setting_yaml_file()

    def _onchange_config_yaml(self, param_name, old, new):
        if "Module_Address_" in param_name:
            self.config["address"][
                param_name.replace("Module_Address_", "")
            ] = new
        elif "Module_Options_" in param_name:
            self.config["options"][
                param_name.replace("Module_Options_", "")
            ] = new
        elif "Module_Network_" in param_name:
            self.config["networks"][
                param_name.replace("Module_Network_", "")
            ] = new

    def load_one_key_settable(
        self,
        config,
        prefix,
        key,
        description,
        onchange_function,
        cmd_object: Cmd,
    ):
        if config[key] == None:
            return
        for item in config[key]:
            setattr(self, prefix + item, config[key][item])
            cmd_object.add_settable(
                Settable(
                    prefix + item,
                    str,
                    description.format(key),
                    self,
                    onchange_cb=onchange_function,
                )
            )

    def load_setting_yaml_to_settable(self, cmd_object: Cmd):
        try:
            cmd_object._settables.clear()
            """Load network info to settable """
            self.load_one_key_settable(
                settings,
                "Global_Node_",
                "node",
                "The global RPC-JSON URL for {} node",
                self._onchange_setting_yaml,
                cmd_object,
            )
            self.load_one_key_settable(
                settings,
                "Global_Scan_API_",
                "scan_api",
                "The API key for {}",
                self._onchange_setting_yaml,
                cmd_object,
            )

        except Exception as e:
            raise Load_Setting_Yaml_To_Settable_Error

    def load_config_yaml_to_settable(self, cmd_object: Cmd, config):
        try:
            self.config = config
            cmd_object._settables.clear()
            """Load Addresses"""
            self.load_one_key_settable(
                config,
                "Module_Address_",
                "address",
                "The address for {}",
                self._onchange_config_yaml,
                cmd_object,
            )
            """Load Network"""
            self.load_one_key_settable(
                config,
                "Module_Network_",
                "networks",
                "Network Info",
                self._onchange_config_yaml,
                cmd_object,
            )
            """Load Options"""
            self.load_one_key_settable(
                config,
                "Module_Options_",
                "options",
                "A modifable option for this module",
                self._onchange_config_yaml,
                cmd_object,
            )

        except Exception as e:
            raise Load_Config_Yaml_To_Settable_Error


global console_setting_store
console_setting_store = ConsoleSettingsStore()
