from dynaconf import Dynaconf

from web3_exploit_framework.core.exceptions import (
    Setting_Yaml_Create_Error,
    Setting_Yaml_Read_Error,
    Setting_Yaml_Save_Error,
)
from web3_exploit_framework.core.platform_dirs import (
    get_config_folder_path,
    get_setting_yaml_path,
)
from web3_exploit_framework.core.setting_sample import (
    get_sample_for_setting_yaml_file,
)
from web3_exploit_framework.core.utils.file import (
    create_folder_if_not_exist,
    dump_yaml_file_to,
    read_yaml_file,
    save_setting_file,
)

settings = Dynaconf(
    envvar_prefix="DYNACONF", settings_files=[get_setting_yaml_path()],
)

settings_chain_api_mapping = {
    'bsc': 'BSCSCAN',
    'eth': 'ETHERSCAN'
}

settings_chain_node_mapping = {
    'bsc': 'BINANCE_SMART_CHAIN',
    'eth': 'ETHEREUM'
}


def check_setting_yaml_file():
    try:
        read_yaml_file(get_setting_yaml_path())
    except (FileNotFoundError):
        raise Setting_Yaml_Read_Error


def create_setting_yaml_file():
    try:
        sample = get_sample_for_setting_yaml_file()
        print(get_config_folder_path())
        create_folder_if_not_exist(get_config_folder_path())
        dump_yaml_file_to(sample, get_setting_yaml_path())
    except (Exception):
        raise Setting_Yaml_Create_Error


def save_setting_yaml_file():
    try:
        save_setting_file(settings._wrapped.as_dict(), get_setting_yaml_path())
    except (Exception):
        raise Setting_Yaml_Save_Error


# `envvar_prefix` = export envvars with `export DYNACONF_FOO=bar`.
# `settings_files` = Load these files in the order.
