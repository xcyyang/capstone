"""Provide common interface for development framework"""
from web3_exploit_framework.core.platform_dirs import get_development_framework_path
import os

class DevelopmentFramework:

    def __init__(self) -> None:
        pass
    
    def get_path_data_folder(self):
        """get the path to data folder for development framework"""
        pass

    def is_initialized(self):
        """check if this development framework is initialized"""
        pass

    def init_environment(self):
        '''initialize the environment for framework'''
        pass

    def get_temporary_folder_for_module(self, module_name):
        '''get temporary folder for module'''
        pass

    def create_temporary_folder_for_module(self, module_name):
        '''create temporary folder for module'''
        pass

    def prepare_exploit_files(self, module_name, path):
        '''prepare exploit file based on module'''
        pass

    def prepare_configuration_file(self, module_name, config):
        '''prepare configuration file based on module'''
        pass

    def prepare_script_files(self, module_name, path):
        '''prepare script file based on module'''
        pass

    def prepare_interface_files(self, module_name, interfaces):
        '''parpare interfaces file based on module'''
        pass

    def execute_script_file(self, module_name, is_forking, script_file=None):
        '''execute script file'''
        pass

    def execute_command(self, module_name, command):
        '''execute framework's command'''
        pass
