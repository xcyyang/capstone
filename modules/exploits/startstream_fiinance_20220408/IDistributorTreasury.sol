// SPDX-License-Identifier: UNLICENSED
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.5.2. SEE SOURCE BELOW. !!
pragma solidity ^0.8.4;

interface IDistributorTreasury {
    event OwnershipTransferred(
        address indexed previousOwner,
        address indexed newOwner
    );

    function MAX_BPS() external view returns (uint256);

    function MAX_FEE_BPS() external view returns (uint256);

    function MIN_FEE_BPS() external view returns (uint256);

    function delegate() external view returns (address);

    function execute(
        address to,
        uint256 value,
        bytes memory data
    ) external returns (bool, bytes memory);

    function feeBps() external view returns (uint256);

    function manualNotify() external;

    function metis() external view returns (address);

    function multisig() external view returns (address);

    function nextNotify() external view returns (uint256);

    function owner() external view returns (address);

    function renounceOwnership() external;

    function resetNotify() external;

    function reward() external view returns (uint256);

    function setDelegate(address _delegate) external;

    function setMultisig(address _delegate) external;

    function setReward(uint256 _reward) external;

    function setTreasury(address _treasury) external;

    function setWeeklyAmount(uint256 _weekly) external;

    function stars() external view returns (address);

    function transferOwnership(address newOwner) external;

    function transferOwnershipOfTreasury(address _owner) external;

    function treasury() external view returns (address);

    function updateFeeBps(uint256 _newFeeBps) external;

    function weeklyAmountOfToken() external view returns (uint256);

    function weeklyNotify() external;

    function withdrawTokens(
        address _token,
        address _to,
        uint256 _amount
    ) external;

    receive() external payable;
}